<html>
  <head>

    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
  </head>
  <body bgcolor="#FFFFFF" text="#000000">
    <div class="moz-text-plain" wrap="true" graphical-quote="true"
      style="font-family: -moz-fixed; font-size: 12px;" lang="x-western">
      <pre wrap="">Team,

Please see attached my notes from the State of the Map open street map
conference.

There are two main things that I took from this conference that I think
are relevant to Ushahidi: historical story telling, and creating custom
base maps.

There was a lot of talk about historical story telling with OSM at the
conference.  This is probably one of the most used features of Ushahidi,
but we keep our data in a separate database that we export into geojson
for consumption by openlayers which creates the map overlays.  There are
a number of historical map data sources both in base layer form as well
as in geocoded form.  I think we could see added value to the Ushahidi
poject with a wider range and modernized import functionality.  For
example we already have csv and kml import from file upload, but it
would be nice to have drag and drop in or maybe even pasting a url where
it will figure it out.  CartoDB.com is a good example of this.

Speaking of which, from my experience there is a high demand for not
just custom theming the Ushahidi interface but I have seen interest in
custom theming the maps.  In my own experience with the March-Hare
Communications Collective there was a lot of demand for offline mobile
maps themed to downplay vehicular paths and emphasize pedestrian paths
as well as simplifying the maps for a city sized range with only a few
zoom levels (14-17).  This can all be done with tools like tile mill or
cartodb.  Both of these tools allow for users to import map information
that is relevent to their interests and style as they need.  With
Tilemill you can then export the resulting tileset to Mapbox's hosting
solution or PDF or mbtiles format (which could be downloaded to mobile
devices and directly opened with OpenLayers for offline usage).  With
cartodb you can bush the resulting baselayers to their servers, but you
can also run sql queries (they have a json sql api) to pull certain data
from the baselayers.  This has significant gains for doing research when
asking questions about Ushahidi reports <span class="moz-txt-underscore"><span class="moz-txt-tag">_</span>and<span class="moz-txt-tag">_</span></span> the map data.

Sincerely,
Dennison
</pre>
    </div>
    <br>
    <fieldset class="mimeAttachmentHeader"><legend
        class="mimeAttachmentHeaderName">Notes.txt</legend></fieldset>
    <br>
    <div class="moz-text-plain" wrap="true" graphical-quote="true"
      style="font-family: -moz-fixed; font-size: 12px;" lang="x-unicode">
      <pre wrap="">===
Keynote
===
- US Chapter is only 2yo
- Addressing is the main area of support that is needed

===
Beautiful thematic maps: 
===
TJ Maciak from Johnson Center, community research institute
- MAPAS - data mapping tool
- OSM has a euro look and feel
- Created maps with mapnik for visualizing data
- Casched tiles with tilemap
- Weave - maping engine and visualization (GPL v3)
- Shapefiles are available from cloudmade
- Style the maps with TileMill
- OGCServer - serves maps using, connects to tilecache
- Base maps -&gt; Thematics -&gt; OSM

Artem Pavlenko, Dan Springmeyer Mapnik 2.1, github.com/mapnik
- Map renderer, making maps with data
- tile.osm.org, mapquest.com
- New feature: Scale factor
- New feature: vertex converter
- Image filters can be used directly in mapnik core, with chaining
- Compositing: style level
- Opacity: style leveling
- SVG and Marker advances
- Mapnik does not need a database.  There is a csv plugin which is really fast
with really small and medium data
- You can now pull data from python file: python function
- pull from GEOJSON

Jessica Lord, Code for America, TileMill github.com/codeforamerica
- Mss: how your styling the map like css
- Zoom: pick the smallest zoom range necesary.  Specify the level in which it 
appears.  Ask: what is the purpose of each level for the user?
- You can create an invisible target point layer that will capture user actions
with a visible layer that has smaller icons on top of that.
- mackie icon library

Michael Migurski Nathaniel Kelso, Stamen: Data visualizations
maps.stamen.com, github.com/migurski/DEM-Tools
- 3 different map tiles: toner, water color, terrain
- elevation: talked about getting elevation data and improving
- ground cover: for coloring map areas (woods, city, water, etc)
national land cover data set from usgs
github.com/migurski/TileStache make the tiles and cache the tiles
- Color process: integrating with PS
- Simulated anealing allows for the intelligent placement of labels so they 
do not overlap.  Tool is called Dimeo
- Fixing some issues with OSM dual carriage roads

===
Join the Humanitarian OpenStreetMap Team, Kate Chapman
===
- FOSS response, disasster preparedness, instruction
- Haiti is the longest running project
- Educational materials available: <a class="moz-txt-link-freetext" href="http://learnOSM.org">http://learnOSM.org</a>
- join mailing list, patch software, outreach, check the task manager: 
tasks.hotsom.org, translators
- dealing with low bandwidth environments
- positions posted to hot.openstreetmap.org
- mailing list: <a class="moz-txt-link-freetext" href="http://lists.openstreetmap.org/listinfo/hot">http://lists.openstreetmap.org/listinfo/hot</a>

===
OSM and Disaster Risk Management, Robert Sodan, World Bank
===
- Disasters are relationships between naturaly occuring phenomenons and 
human interactions
- Risk Assesments: Hazard + Exposure + Vulnerability = Risk (probable loss)
- Categorization of infrastructure of interest
- Number of occupants in buildings is often a tagged data point

How do you ethically justify the use of volunteer labor in critical communities
to support an institution like the world bank that works closly with 
governments in the end goal of colonialism and restrictions on individual 
and community agency?  Agreed that it will be a problem.

===
State of the Portlan Map
===
- There is a lot of open data in portland
- sw trails pdx

===
Mapbox
===
- OSM is a lot of facts independent of use
- Paper maps independent of routing
- Designs baselaye (with tilemill, cartocss, rendered with mapbox)
- Data not rendered on the file, looking at files (tiles)
- Unique aproach to OSM tile reference linked on Mapbox blog from this summer
- level 2,3,4 with administrative boundaries (overpass api, including member 
ways and nodes)
- alter tags: drop tags from nodes, downplay maritime boundaries
- Natural earth data set: fuzzy matches with OSM data set to determine size
and placement of city labels
- import tool is impossom: can not do differential updates (vs osmdb2sql), 
allows for custom manipulating of data during import.  Can set up additional
tables (bodies of water, land uses, etc).  Mapbox has custom functions to this
end: replace tag name seperating characters, apply abbreviations to common
words.
- postprocessing: performs transformations after the import.  Define points for
labels of all polygons.  Labels layer is above the polygon level which allows
for intelligent placement of labels.  Different landuse areas get a uniqe 
"inline".  
- Icons and labels: merge multiple nodes into with the same name in the same 
area.

===
Things are Heating Up in Geo: Heat Maps 101, HumanGeo, Abe Usher, 
thehumangeo.com, 
===
- Use heatmaps when there is too much data, to determine trust
- Dont just trust open street map, you can also check other spatial crowd 
source data sources.  Correlations promote trust.
- Showed an interesting example of heatmapping tweets over a OSM map
- You can also make a video file
- Metacarta and geodict can be used to geolocate un structured text
- Jeff Jonas from IBM - deals with determining uncertain data

===
Code for America, OpenImpact.us
===
- PeaceCorps for Geeks
- Adopt a hydrant, used google maps
- ethically compelled to move to OSM
- some places like macon are still using physical pushpins for mapping events
- follow the data: by using this technique in interviews they were able to find 
data sources
- Prepared.ly - OSM and Stamen
- TileMill, Neo4j+OSM, Skobbler + Data
- Data Checkout bit.ly/timemaker: leaflet, mongodb, geojson, kml
- Creating tools

===
Steps for creating basemaps
===
- This is all done in TileMill: styling (carto css), importing layers and data 
sources in multiple formats, rendering (mapbox on the backend), exporting to 
multiple formats (mbtiles, SVG, GeoPDF, upload to mapbox)
- RouteME (for iOS) Justin Miller (maybe mapbox sdk)
- OpenLayers can handle mbtiles!

===
CartoDB.com, Andrew Hill
===
- Gepspatial DB in the cloud, mapnik for the tiles, API, UI, can be deployed
on its own, or you can pay for hosting
- Drag and drop shapefiles (dbf files), also direct url imports
- SQLAPI is in json format
- uses osm2pgsql
- The power lies in access to carto db
- You can dynamically query information from the map tiles themselves
- leaflet, gmaps, backbone, d3
- github.com/cartodb/torque: placing temporal data

===
Public Labratory, Grassroots mapping, Mathew Lippencot
===
- Collecting ariel imagery with kites/map
- uses cern open hardware license, GPL v3
- creates kits for camera stabalizing and kites
- collects images and stitches them in PS
- Map knitter helps stitching in FOSS
- Potlatch 2 allows for submitting traces to OSM
- There has been upstream support from google who is using their maps.  Google 
provides a link back to the Mapknitter website where you have access to all 
the xiff data and more.
- Able to quickly and cheaply create maps where drones fail
</pre>
    </div>
  </body>
</html>
